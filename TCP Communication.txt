TCP Communication
    - end to end => the agents speaks TCP protocol, but not the INTERMEDIATE network (routers speak up to layer 3 IP)
    - ensure message delivering
    - ensure message ordering
    - support different message sizes
    - allow the receiver to stablish a Flow Control over the message delivery rate
        - the two agents maybe are implemented using diff technology and one its faster than the other => set an appropiate pace
    - allow multiple applications communicate through the same machine => multiplexing concept => diff communications through the same IP

Low architecture communication layers (IP, Ethernet) don't avoid the following problems:
    - packet loss
    - packet ordering
    - duplicate packet delivery
    - max packet size to be delivered
    - time limit for packet delivery => when a packet is sent, this must be considered lost usually after 2'

    - in an IP network if one packet is loss, there's no way to recover it
    - those problems can't be dealt by the lower layer protocols
    ** this problems are solved by the TCP protocol **


TCP Highlights
    - connection oriented => before starting the communication btw two agents there's a face connection (connect, transmit, disconnect)
    - full duplex => the info is sent in both directions among two agents
    - reliable => if one packet is lost, this lost is detected and the packet can be recovered
    - ordered delivery => the receiver agent can order the arrival packets even though they're disordered according its transmition
    - byte stream based => the sequence number used to order the packets is referred not to this ones but to the bytes sent
    - we call segment the TCP data unit => a segment is a specific amount of bytes sent, which can contain multiple IP packets
        - so TCP layer work with segments of bytes
        - and IP layer work with packets
    - flow control (avoids receiver overload) => mechanism allows receiver to adjust the transmition pace
    - congestion control (avoids intermediate network overload) => allows the transmiter to detect network saturation and adjust the transmition rate
    - multiplexing => allows diff communication using multiple ports over the same source/dest ip and protocol
        - any communication/connection is defined by five params: [source_ip, source_port, protocol (TCP/UDP), destination_ip, destination_port]

