
Resource allocation: set of procedures that allows a network element to decide about how to assign the available resources (bandwidth and buffers size)
    - decide about the traffic that arrives

Congestion Control: set of procedures that avoid or correct congestion at the network

- What is the difference between congestion control and flow control?
    - congestion control operates at network and/or transmitter
    - flow control does the same at receiver


Network Model: IP based
    - Packet switching: links and routers deal with discrete information units (IP packets)
    - Non-connected traffic flow => IP protocol is non-connected
        - routers can distinguish non-conntected traffic flows via IP addresses (source, destination) or Tags set by the source
    - Service model: sometimes the intermediate network should provide some information
        - Quality of service (QoS), telling the source the parameters to be accomplished (bandwidth, delay, ...)
        - one can ask to the network


** We want to understand the mechanisms on TCP and on routers that can avoid a network congestion situatio **

When a network is congested?
    - a router has several queues
    - the traffic enters throughs many ports and needs to be served
    - the scheduler is the one who decides which queue is served at any time to transmit the packets
    - if the queues are full => congestion situation => may produce loses and long delays


Service Policies
    - a router must employ a queue policy or service policy
    - queue poliy: the way a router schedules its incomming traffic
        - which packets must be transmitted and what order
        - which packets must be dropped if queue overflows

    - First In Frist Out (FIFO)
        - a drop tail procedure may be adhered
        - doesn't provide any kind of congestion control and resource allocation
        - implies external congestion control and resource allocation => e.g. at TCP layer
        - Variations:
            - tag IP packets with a priority field (TOS) => Type Of Service
            - implement multiple queues with different priority
            - Problem: high priority queues may block lower ones transmission => not fair

    - Fair Queueing (FQ)
        - assuming that congestion control and resource allocation relies on TCP, the problem of having greedy processes (UDP) murt be overcome
        - FQ solves the problem having multiple queues assigned to different streams, being served cyclically (Round-Robin) (RR)
        - STREAM: division of the bandwidth
        - Problem: because of diff size of the packets we can not guarantee to provide to each stream the specific bandwidth

        ** Fair queueing allows to make fair shceduling even the packets have diff length **

        - Different packet sizes. How they are served in order to guarantee the bandwith is the same to every stream?
            1. Packets arrive in sequence. Ai arribal time of the i_th packet. Si is the packet length
            2. Fi => estimated time to finish. When an arriving packet founds the server free, Fi = Ai + Si. When the server is busy, Fi = max(F', Ai) + Si
            3. Being F' the finish time of the packet being served
            4. The packet with the lower Fi is transmitted first

            ** when choosing a new packet to served, is not longer used a FIFO queue, it must be choose the one with less Fi **

        - some characteristics:
            - the system never remains idle when queues are not empty
            - when n active streams, non has more than 1/n of the network capacity
            - when a stream becomes idle, the released amount of bandwidth is shared amont the rest